name: Ubuntu (3.0 taosdump native)

on:
  schedule:
    - cron: "10 16 * * *"
  push:
    branches:
      - develop
      - 3.0
      - main
  pull_request:
    branches:
      - develop
      - 3.0
      - main

env:
  TOOLS_BUILD_TYPE: Release
  PR_NUMBER: ${{ github.event.number }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Step that prints name of pull request's base branch
        run: |
          echo "Pull request's base branch is: ${BASE_BRANCH}"
          echo "Pull request's branch is: ${GITHUB_REF##*/}"
          echo "Pull request's head ref is: ${GITHUB_HEAD_REF}"
        env:
          BASE_BRANCH: ${{ github.base_ref }}
        if: github.event_name == 'pull_request'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v23.2

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v23.2
        with:
          files: |
            src/CMakeLists.txt
            src/taosdump*
            tests/taosdump/native/*
            inc/*
            deps/CMakeLists.txt
            packaging/tools/*
            .github/workflows/3.0-taosdump-release.yml

      - name: Run step if any of the listed files above change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files listed above has changed."

      - name: Checkout TDengine
        if:
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        uses: actions/checkout@v2
        with:
          repository: 'taosdata/TDengine'
          path: 'TDengine'
          ref: ${{ github.event.pull_request.base.ref }}

      - name: Change time zone
        if:
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          sudo date

      - name: Set up Go
        if:
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: first build TDengine
        if: |
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        run: |
          sudo apt update > /dev/null
          sudo apt install libgflags2.2 libgflags-dev -y > /dev/null
          cd TDengine
          mkdir debug && cd debug
          cmake .. -DBUILD_HTTP=false -DBUILD_DEPENDENCY_TESTS=false > /dev/null
          make -j2 > /dev/null && sudo make install > /dev/null && cd .. && rm -rf debug
          if [[ ! -f /usr/local/taos/bin/taosd ]] || [[ ! -f /usr/local/taos/bin/taosadapter ]]
          then
            echo "TDengine build failure"
            exit 1
          fi

      - name: Install packages for build taos-tools
        if: |
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        run: sudo apt install lzma-dev liblzma-dev libjansson-dev libz-dev zlib1g libsnappy-dev pkg-config lcov expect -y > /dev/null

      - name: Checkout taos-tools to PR number
        if: |
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
        run: |
          git fetch origin +refs/pull/${{env.PR_NUMBER}}/merge
          git checkout -qf FETCH_HEAD

      - name: Build taos-tools
        if: |
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        run: |
          mkdir debug ||:
          cd debug
          cmake .. -DTOOLS_BUILD_TYPE=${{env.TOOLS_BUILD_TYPE}} > /dev/null
          make -j2 > /dev/null && sudo make install > /dev/null
          if [[ ! -f /usr/local/taos/bin/taosdump ]] || [[ ! -f /usr/local/taos/bin/taosBenchmark ]]
          then
            echo "taos-tools build failure"
            exit 1
          fi

      - name: Install python packages
        if: |
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        run: |
          pip3 install decorator numpy fabric2 psutil pandas faker toml taospy > /dev/null

      - name: taosdump old Test
        if:
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        run: |
          cd tests
          sudo pkill -9 taosadapter || :
          sudo pkill -9 taosd || :

          echo "TEST: old cases"
          python3 ./test.py -f taosdump/old/taosdumpTest.py > /dev/null && echo -e "\033[32m taosdumpTest.py success! \033[0m"|| echo -e "\033[31m taosdumpTest.py failed! \033[0m" | tee -a ~/taosdump-failed.txt
          python3 ./test.py -f taosdump/old/taosdumpTest2.py > /dev/null && echo -e "\033[32m taosdumpTest2.py success! \033[0m"|| echo -e "\033[31m taosdumpTest2.py failed! \033[0m" | tee -a ~/taosdump-failed.txt
          python3 ./test.py -f taosdump/old/taosdumpTestNanoSupport.py > /dev/null && echo -e "\033[32m taosdumpTestNanoSupport.py success! \033[0m"|| echo -e "\033[31m taosdumpTestNanoSupport.py failed! \033[0m" | tee -a ~/taosdump-failed.txt


      - name: taosdump Develop Test
        if:
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        run: |
          cd tests
          sudo pkill -9 taosadapter || :
          sudo pkill -9 taosd || :
          sleep 5

          echo "TEST: develop test cases"
          if find taosdump/native -name "*.py"|grep -q .;
          then
            for i in `find taosdump/native -name "*.py" | grep -Ev "Float|Double"`; \
              do python3 ./test.py -f $i > /dev/null          \
                && echo -e "\033[32m $i success! \033[0m"     \
                            | tee -a ~/taosdump-success.txt   \
                || echo -e "\033[31m $i failed! \033[0m"      \
                            | tee -a ~/taosdump-failed.txt;   \
                            done
          fi

          for i in `find taosdump/native -name "*.py" | grep "Float|Double"`;   \
            do python3 ./test.py -f $i > /dev/null        \
              && echo -e "\033[32m $i success! \033[0m"   \
                          || echo -e "\033[31m $i failed! \033[0m" ;  \
                            done

      - name: Check Test Result
        if:
          (steps.changed-files-specific.outputs.any_changed == 'true'
          && github.event_name == 'pull_request')
          || github.event_name == 'push'
          || github.event_name == 'schedule'
        run: |
          if [ -f ~/taosdump-failed.txt ]; then
            cat ~/taosdump-failed.txt
            exit 1
          elif [ -f ~/taosdump-success.txt ]; then
            cat ~/taosdump-success.txt
          fi
