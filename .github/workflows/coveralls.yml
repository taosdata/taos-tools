name: Coveralls
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  TOOLS_BUILD_TYPE: Debug
  PR_NUMBER: ${{ github.event.number }}

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Run test for Coveralls report
        uses: actions/checkout@v2
        with:
          submodules: recursive
          path: 'taos-tools'
          ref: 'develop'

      - name: Step that prints name of pull request's base branch
        run: |
          echo "Pull request's base branch is: ${BASE_BRANCH}"
          echo "Pull request's branch is: ${GITHUB_REF##*/}"
          echo "Pull request's head ref is: ${GITHUB_HEAD_REF}"
        env:
          BASE_BRANCH: ${{ github.base_ref }}
        if: github.event_name == 'pull_request'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v23.2

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v23.2
        with:
          files: |
            src/*
            tests/taosbenchmark/*
            tests/taosdump/*
            inc/*
            .github/workflows/*

      - name: Run step if any of the listed files above change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files listed above has changed."

      - name: Checkout tdengine
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: actions/checkout@v2
        with:
          submodules: recursive
          repository: 'taosdata/TDengine'
          path: 'TDengine'
          ref: 'develop'

      - name: Change time zone
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          sudo date

          #      - name: Checkout TDengine with same branch of taos-tools
          #run: |
          #cd TDengine
          #git pull
          #git branch -a | grep -w ${{ github.head_ref }} \
          #  && git checkout ${{ github.head_ref }} \
          #  && git submodule update --init --recursive \
          #  || echo "${{ github.head_ref }} not found in TDengine"

          #if: github.event_name == 'pull_request'

      - name: Install packages
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: sudo apt-get install lzma-dev liblzma-dev libjansson-dev libz-dev libsnappy-dev pkg-config lcov expect -y > /dev/null

      - name: Checkout TDengine's taos-tools to develop latest
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/src/kit/taos-tools
          git checkout develop
          git pull

      - name: Checkout TDengine's taos-tools to PR number
        if: |
          github.event_name == 'pull_request' &&
          steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/src/kit/taos-tools
          git fetch origin +refs/pull/${{env.PR_NUMBER}}/merge
          git checkout -qf FETCH_HEAD

      - name: Set up Go
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Set up Rust
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build & Install TDengine
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine
          mkdir debug
          cd debug
          cmake .. -DBUILD_JDBC=false -DBUILD_HTTP=false -DWEBSOCKET=true -DBUILD_TOOLS=true -DCOVER=true -DTOOLS_BUILD_TYPE=Debug > /dev/null 2>&1
          make > /dev/null 2>&1
          sudo make install > /dev/null
          pip3 install taospy numpy fabric2 psutil pandas faker toml > /dev/null

      - name: exp Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "TEST: taodump -p"
          cd TDengine/src/kit/taos-tools/tests/taosdump
          ./exp.sh

      - name: Basic Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/debug
          echo "TEST: taosBenchmark --help"
          ./build/bin/taosBenchmark --help > /dev/null
          echo "TEST: taodump --help"
          ./build/bin/taosdump --help > /dev/null
          echo "TEST: taodump --version"
          ./build/bin/taosdump --version > /dev/null
          echo "TEST: taodump -c"
          ./build/bin/taosdump -c > /dev/null 2>&1 || :
          echo "TEST: taodump --port 100000"
          ./build/bin/taosdump --port 100000 > /dev/null 2>&1 || :
          echo "TEST: taodump --port NotANumber"
          ./build/bin/taosdump --port NotANumber > /dev/null 2>&1 || :
          echo "TEST: taodump -C"
          ./build/bin/taosdump -C > /dev/null 2>&1 || :
          echo "TEST: taodump -D"
          ./build/bin/taosdump -D > /dev/null 2>&1 || :
          echo "TEST: taodump --databases -h localhost -u root"
          ./build/bin/taosdump --databases -h localhost -u root > /dev/null 2>&1 || :

          nohup sudo taosd > /dev/null &
          sleep 10

          # test codec
      - name: taosdump codec Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/debug
          echo "TEST: simple and log database"
          ./build/bin/taosBenchmark -t 1 -n 1 -y
          ./build/bin/taosdump -D test -a
          rm -f *.sql *.avro*

          echo "TEST: complex columns"
          ./build/bin/taosBenchmark -t 2 -n 10 -b bool,tinyint,smallint,int,bigint,utinyint,usmallint,uint,ubigint,binary,nchar,timestamp -A bool,tinyint,smallint,int,bigint,utinyint,usmallint,uint,ubigint,binary,nchar,timestamp -y > /dev/null

          echo "TEST: whole db with null codec"
          ./build/bin/taosdump -D test -d null -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -d null -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: whole db with snappy codec"
          ./build/bin/taosdump -D test -d snappy -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -d snappy -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: whole db with deflate codec"
          ./build/bin/taosdump -D test -d deflate -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -d deflate -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: whole db with lzma codec"
          ./build/bin/taosdump -D test -d lzma -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -d lzma -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: whole db with unknown codec"
          ./build/bin/taosBenchmark -t 2 -n 2 -y > /dev/null
          ./build/bin/taosdump -D test -d unknown -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -d unknown -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: singal normal table with unknown codec"
          ./build/bin/taosdump test d0 -d unknown -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -d unknown -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: unknown codec"
          ./build/bin/taosdump -D test -d unknown -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -d unknown -gg > /dev/null
          rm -f *.sql *.avro*

      - name: taosdump time Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/debug
          echo "TEST: epoch time and batch"
          ./build/bin/taosdump -D test -S 1500000000000 -E 1500000000004 -B 10 -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: human time"
          ./build/bin/taosdump -D test -S '2017-07-14 10:40:00.000' -E '2017-07-14 10:40:00.004' -gg > /dev/null
          rm -f *.sql *.avro*

      - name: taosdump normal table Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/debug
          echo "TEST: normal table"
          ./build/bin/taosBenchmark -N -t 2 -n 10 -y > /dev/null
          ./build/bin/taosdump -D test -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: singla normal table"
          ./build/bin/taosBenchmark -t 2 -n 2 -y > /dev/null
          ./build/bin/taosdump test d0 > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -gg > /dev/null
          taos -s "select count(tbname) from test.meters" | grep "1 row" || exit 1
          rm -f *.sql *.avro*

      - name: taosdump escape char Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/debug
          echo "TEST: -n escape_char"
          ./build/bin/taosdump -n -D test > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -n -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: escaped tag"
          ./build/bin/taos -s "drop database test"
          ./build/bin/taos -s "create database test"
          ./build/bin/taos -s "create stable stb (ts timestamp, \`N\` int) tags(`T` int)"
          ./build/bin/taos -s "insert into test.tb using test.stb tags(0) values(now, 0)"
          ./build/bin/taosdump -D test > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -n -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: -L loose_mode"
          ./build/bin/taosdump -L -D test > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -L -gg > /dev/null
          rm -f *.sql *.avro*

          echo "TEST: complex with larger binary"
          ./build/bin/taosBenchmark -t 2 -n 10 -w 40 -b bool,tinyint,smallint,int,bigint,utinyint,usmallint,uint,ubigint,binary,nchar,timestamp -A bool,tinyint,smallint,int,bigint,utinyint,usmallint,uint,ubigint,binary,nchar,timestamp -y > /dev/null
          ./build/bin/taosdump -D test -gg > /dev/null
          ./build/bin/taos -s "drop database test"
          ./build/bin/taosdump -i . -gg > /dev/null
          rm -f *.sql *.avro*

      - name: taosdump old format data Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/debug
          echo "TEST: dump old format data in"
          ./build/bin/taos -s "drop database test"
          tar xvJf ../src/kit/taos-tools/example-data/example-data.tar.xz -C .
          ./build/bin/taosdump -i dump -gg
          rm -f *.sql *.avro*

      - name: Old Test cases
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/tests/pytest
          sudo pkill -9 taosadapter || :
          sudo pkill -9 taosd || :

          echo "TEST: old cases"
          python3 ./test.py -f tools/taosdumpTest.py > /dev/null
          python3 ./test.py -f tools/taosdumpTest2.py > /dev/null
          python3 ./test.py -f tools/taosdumpTest3.py > /dev/null
          python3 ./test.py -f tools/taosdumpTestNanoSupport.py > /dev/null
          python3 test.py -f query/nestedQuery/nestedQuery.py > /dev/null
          python3 test.py -f tools/taosdemoAllTest/TD-5213/insertSigcolumnsNum4096.py > /dev/null

      - name: taosdump native Develop Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/src/kit/taos-tools/tests
          sudo pkill -9 taosadapter || :
          sudo pkill -9 taosd || :

          echo "TEST: develop test cases"

          if find taosdump/native -name "*.py"|grep -q .;
          then
            for i in `find taosdump/native -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m $i success! \033[0m"|| echo -e "\033[31m $i failed! \033[0m" ;done
          fi

      - name: taosdump WebSocket Develop Test
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/src/kit/taos-tools/tests
          sudo pkill -9 taosadapter || :
          sudo pkill -9 taosd || :

          if find taosdump/ws -name "*.py"|grep -q .;
          then
            for i in `find taosdump/ws -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m develop-test/$i success! \033[0m"|| echo -e "\033[31m develop-test/$i failed! \033[0m" | tee -a ~/taosdump-failed.txt ;done
          fi

      - name: System Test cases
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          cd TDengine/tests/system-test
          echo "TEST: system test cases"
          if find 5-taos-tools/taosdump -name "*.py"|grep -q .;
          then
            for i in `find 5-taos-tools/taosdump -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m $i success! \033[0m"|| echo -e "\033[31m $i failed! \033[0m" ;done
          fi

          python3 test.py -f 5-taos-tools/TD-12478.py > /dev/null 2>&1 && echo -e "\033[32m  system-test/5-taos-tools/TD-12478.py success! \033[0m"|| echo -e "\033[31m system-test/5-taos-tools/TD-12478.py failed! \033[0m"

          echo "TEST: taosdemo develop test cases"
          cd ../develop-test
          if find 5-taos-tools/taosbenchmark -name "*.py"|grep -q .;
          then
            for i in `find 5-taos-tools/taosbenchmark -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m $i success! \033[0m"|| echo -e "\033[31m $i failed! \033[0m" ;done
          fi

          echo "TEST: taosdemo system test cases"
          cd ../system-test
          if find 5-taos-tools/taosbenchmark -name "*.py"|grep -q .;
          then
            for i in `find 5-taos-tools/taosbenchmark -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m $i success! \033[0m"|| echo -e "\033[31m $i failed! \033[0m" ;done
          fi

      - name: Generate report
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          topdir=`pwd`
          cd TDengine/debug/src/kit/taos-tools
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/taosdump.c -o src/CMakeFiles/taosdump.dir/taosdump.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchMain.c -o src/CMakeFiles/taosBenchmark.dir/benchMain.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchCommandOpt.c -o src/CMakeFiles/taosBenchmark.dir/benchCommandOpt.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchData.c -o src/CMakeFiles/taosBenchmark.dir/benchData.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchInsert.c -o src/CMakeFiles/taosBenchmark.dir/benchInsert.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchJsonOpt.c -o src/CMakeFiles/taosBenchmark.dir/benchJsonOpt.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchOutput.c -o src/CMakeFiles/taosBenchmark.dir/benchOutput.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchQuery.c -o src/CMakeFiles/taosBenchmark.dir/benchQuery.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchSubscribe.c -o src/CMakeFiles/taosBenchmark.dir/benchSubscribe.c.gcno
          gcov -abcfu ${topdir}/TDengine/src/kit/taos-tools/src/benchUtil.c -o src/CMakeFiles/taosBenchmark.dir/benchUtil.c.gcno
          mkdir ${topdir}/coverage || :
          lcov -c -d . -o ${topdir}/coverage/lcov-with-deps.info
          lcov -r ${topdir}/coverage/lcov-with-deps.info "*/deps/*" -o ${topdir}/coverage/lcov.info

      - name: Publish to coveralls.io
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
