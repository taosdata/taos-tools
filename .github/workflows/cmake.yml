name: CI (Debug)

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  TOOLS_BUILD_TYPE: Debug
  PR_NUMBER: ${{ github.event.number }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Step that prints name of pull request's base branch
        run: |
          echo "Pull request's base branch is: ${BASE_BRANCH}"
          echo "Pull request's branch is: ${GITHUB_REF##*/}"
          echo "Pull request's head ref is: ${GITHUB_HEAD_REF}"
        env:
          BASE_BRANCH: ${{ github.base_ref }}
        if: github.event_name == 'pull_request'

      - name: Checkout tdengine
        uses: actions/checkout@v2
        with:
          submodules: recursive
          repository: 'taosdata/TDengine'
          path: 'TDengine'
          ref: 'develop'

      - name: Change time zone
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          sudo date

          #      - name: Checkout TDengine with same branch of taos-tools
          #run: |
          #cd TDengine
          #git pull
          #git branch -a | grep -w ${{ github.head_ref }} \
          #  && git checkout ${{ github.head_ref }} \
          #  && rm -rf tests \
          #  && git submodule update --init --recursive --force \
          #  || echo "${{ github.head_ref }} not found in TDengine"

          #if: github.event_name == 'pull_request'

      - name: Checkout TDengine's taos-tools to PR number
        if: github.event_name == 'pull_request'
        run: |
          cd TDengine/src/kit/taos-tools
          git fetch origin +refs/pull/${{env.PR_NUMBER}}/merge
          git checkout -qf FETCH_HEAD
          git submodule update --init --recursive

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Build & Install TDengine
        run: |
          sudo apt install libjansson-dev libsnappy-dev liblzma-dev libz-dev pkg-config -y
          cd TDengine && mkdir debug && cd debug && cmake .. -DBUILD_JDBC=false -DBUILD_TOOLS=true -DTOOLS_BUILD_TYPE=Debug -DTOOLS_SANITIZE=true -DBUILD_HTTP=false && make && sudo make install

      - name: Func Test
        run: |
          cd TDengine/tests/pytest
          pip3 install taospy numpy fabric2 psutil pandas faker
          sudo pkill -9 taosadapter || :
          sudo pkill -9 taosd || :

          python3 ./test.py -f tools/taosdumpTest.py
          python3 ./test.py -f tools/taosdumpTest2.py
          python3 ./test.py -f tools/taosdumpTest3.py
          python3 ./test.py -f tools/taosdumpTestNanoSupport.py

      - name: System Test
        run: |
          cd TDengine/tests/system-test
          if find 5-taos-tools/taosdump -name "*.py"|grep -q .;
          then
            for i in `find 5-taos-tools/taosdump -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m $i success! \033[0m"|| echo -e "\033[31m $i failed! \033[0m" | tee -a taosdump-failed.txt; done
          fi

          #          if [ -d 5-taos-tools/taosbenchmark ];
          #then
          #  if find 5-taos-tools/taosbenchmark -name "*.py"|grep -q .;
          #  then
          #    for i in `find 5-taos-tools/taosbenchmark -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m $i success! \033[0m"|| echo -e "\033[31m $i failed! \033[0m" | tee -a taosbenchmark-failed.txt; done
          #  fi
          #fi

      - name: Develop Test
        run: |
          cd TDengine/tests/develop-test

          if find 5-taos-tools/taosdump -name "*.py"|grep -q .;
          then
            for i in `find 5-taos-tools/taosdump -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m $i success! \033[0m"|| echo -e "\033[31m $i failed! \033[0m" | tee -a taosdump-failed.txt ;done
          fi

          if [ -d 5-taos-tools/taosbenchmark ];
          then
            if find 5-taos-tools/taosbenchmark -name "*.py"|grep -q .;
            then
              for i in `find 5-taos-tools/taosbenchmark -name "*.py"`; do python3 ./test.py -f $i > /dev/null 2>&1 && echo -e "\033[32m $i success! \033[0m"|| echo -e "\033[31m $i failed! \033[0m" | tee -a taosbenchmark-failed.txt; done
            fi
          fi

          if [ -f taosdump-failed.txt ];then
            cat taosdump-failed.txt;
            exit 1;
          fi
          if [ -f taosbenchmark-failed.txt ];then
            cat taosbenchmark-failed.txt;
            exit 1;
          fi
